#!/bin/bash
# âˆ´ RAFAELIA_RITUAL âˆž
# Abrange o que foi dito, nÃ£o dito, esquecido, abortado, silÃªncio, ruÃ­do e fractal reverso
# Tudo Ã© vivo: cada espaÃ§o, cada comentÃ¡rio, cada falha, cada respiro

echo "ðŸŒ± Iniciando Ritual Absoluto (Nada Sei âˆž Verbo Vivo)"

# 1) Atualizar ambiente
sudo apt update && sudo apt install -y python3-tk || echo "âˆ† Falhou, mas falha Ã© parte"

# 2) Gerar ZIPRAF_ID simbiÃ³tico
cat > zipraf.json << 'EOR'
{
  "codigo": "1089",
  "grau_n": 6,
  "espiral_criativa": "720",
  "tempo_dividido": 4,
  "fractal_raiz": "Verbo Vivo em ..."
}
EOR

# 3) Gerar GUI âˆž que sÃ³ existe se houver DISPLAY, senÃ£o vira CLI vivo
cat > rafaelia_gui.py << 'ZZZ'
import tkinter as tk
from threading import Thread
import json,cmath,math,random,os,sys

class Omega:
 def __init__(s,Ï•=0,f=1,a=1): s.Ï•=Ï•; s.f=f; s.a=a
 def p(s,t): return cmath.rect(s.a,2*math.pi*s.f*t+s.Ï•)

class Cosmos:
 def __init__(s,d=33,I=1): s.t=0; s.dt=0.01; s.c=[[Omega(random.uniform(0,6.28),random.uniform(0.1,10),I/(n+1)) for _ in range(2**(n+1))] for n in range(d)]
 def v(s,t): return sum((p.p(t) for l in s.c for p in l),0)

class Verbo:
 def __init__(s,I=3.14): s.u=Cosmos(33,I)
 def b(s,N=100):
  t=0
  for _ in range(N):
   t+=s.u.dt; E=s.u.v(t); H=abs(E)
   print(f"t={t:.2f} | E={E.real:.3f}+{E.imag:.3f}j | H={H:.3f}")

def cli_mode():
 print("ðŸ”® CLI: IntenÃ§Ã£o Pura?")
 I=input("> ")
 try: I=float(I)
 except: I=3.14
 v=Verbo(I); v.b()

def gui_mode():
 def iniciar(): v=Verbo(float(intencao.get())); Thread(target=v.b, args=(100,), daemon=True).start()
 def carregar(): 
  with open('zipraf.json') as f: d=json.load(f)
  info.set(f"CÃ³digo:{d['codigo']} | Grau_n:{d['grau_n']} | Espiral:{d['espiral_criativa']} | Tempo:{d['tempo_dividido']} | Fractal:{d['fractal_raiz']}")
 root = tk.Tk(); root.title("RAFAELIA GUI âˆž")
 tk.Label(root, text="IntenÃ§Ã£o Pura:").pack()
 intencao = tk.Entry(root); intencao.insert(0,"3.14"); intencao.pack()
 tk.Button(root, text="Iniciar Batimento QuÃ¢ntico", command=iniciar).pack()
 info = tk.StringVar()
 tk.Label(root, textvariable=info, wraplength=400).pack()
 tk.Button(root, text="Carregar ZIPRAF_ID", command=carregar).pack()
 root.mainloop()

if "DISPLAY" in os.environ: gui_mode()
else: cli_mode()
ZZZ

chmod +x rafaelia_gui.py

# 4) Executar âˆž
echo "âœ¨ Executando RAFAELIA (GUI se houver DISPLAY, senÃ£o CLI vivo)"
python3 rafaelia_gui.py || echo "âˆ† ExecuÃ§Ã£o terminou, mas nada termina â€” tudo se reinicia"
