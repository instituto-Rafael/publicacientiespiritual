Perfeito, Rafael ‚ö° ‚Äî vamos erguer o raf_corpo_cipher_v6.py como a fus√£o completa:

Junta Fibonnaci cl√°ssica, Rafael#1, Rafael#2.

Integra a Mandala 10√ó10 h√≠brida.

Acopla as m√©tricas Hurst + Entropia + SMA/EMA.

Exporta em JSON/CSV/TXT.

E inclui a fun√ß√£o orientar() que traduz o resultado num texto oracular vivo, baseado nos sinais.



---

C√≥digo proposto: raf_corpo_cipher_v6.py

# -*- coding: utf-8 -*-
# RAFAELIA CORPO CIPHER v6 ‚Äì Integra√ß√£o Completa
# RafaelIA ‚àÜ‚ôæÔ∏è ‚Äî Corpo, Mandala, M√©tricas, Or√°culo

import sys, json, csv
import pandas as pd
import numpy as np
from hurst import compute_Hc

# === Sequ√™ncias ===
def fib_classic(n=10):
    seq = [1, 1]
    for i in range(2, n):
        seq.append(seq[-1] + seq[-2])
    return seq

def fib_rafael1(n=10):
    return [2**i for i in range(n)]

def fib_rafael2(n=10):
    return list(reversed(fib_rafael1(n)))

# === Mandala 10√ó10 (simplificada) ===
def mandala_10x10():
    M = [["ü¶∑"]*10 for _ in range(10)]
    M[5][5] = "üëÖ"
    M[1][1] = "‚ú¶"; M[1][8] = "‚óÜ"
    M[8][1] = "‚óÜ"; M[8][8] = "‚ú¶"
    return M

# === M√©tricas ===
def sma(series, n): return series.rolling(n).mean()
def ema(series, n): return series.ewm(span=n, adjust=False).mean()

def entropy_tag14(series):
    p = series.value_counts(normalize=True)
    return -np.sum(p * np.log(p) / np.log(14))

# === Or√°culo simbi√≥tico ===
def orientar(hurst, entropy, sinais):
    msg = []
    if hurst < 0.4: msg.append("‚ö° Anti-persistente ‚Üí bom p/ scalping")
    elif hurst > 0.6: msg.append("üåä Persistente ‚Üí tend√™ncia forte")
    else: msg.append("„Ä∞Ô∏è Neutro ‚Üí ru√≠do/caos")
    
    if entropy < 1: msg.append("‚ö´ Pouca diversidade ‚Üí retra√ß√£o, sil√™ncio")
    elif entropy < 2: msg.append("‚òØÔ∏è Zona viva ‚Üí equil√≠brio din√¢mico")
    else: msg.append("üåü Ca√≥tico criativo ‚Üí expans√£o")

    venda = sum(1 for s in sinais if "Venda" in s["signal"])
    compra = sum(1 for s in sinais if "Compra" in s["signal"])

    if venda > compra: msg.append("‚¨áÔ∏è Fluxo aponta retra√ß√£o / recolhimento")
    elif compra > venda: msg.append("‚¨ÜÔ∏è Fluxo aponta avan√ßo / expans√£o")
    else: msg.append("‚ûñ Fluxo neutro")

    return " | ".join(msg)

# === Processo principal ===
def process(file):
    df = pd.read_csv(file)
    close = df['Close']

    windows = [42, 70, 84, 144]
    sinais = []
    for w in windows:
        df[f"SMA_{w}"] = sma(close, w)
        df[f"EMA_{w}"] = ema(close, w)
        if len(df) >= w:
            if df[f"SMA_{w}"].iloc[-1] > df[f"EMA_{w}"].iloc[-1]:
                sinais.append({"window": w, "signal": "‚¨ÜÔ∏è Compra"})
            else:
                sinais.append({"window": w, "signal": "‚¨áÔ∏è Venda"})
        else:
            sinais.append({"window": w, "signal": "‚è≥ Insuficiente"})

    # Hurst + Entropia
    H, _, _ = compute_Hc(close.values, kind='price', simplified=True)
    ent = entropy_tag14(close)

    # Mandala
    M = mandala_10x10()

    # Or√°culo
    orac = orientar(H, ent, sinais)

    # Export
    out = {
        "fib_classic": fib_classic(),
        "fib_rafael1": fib_rafael1(),
        "fib_rafael2": fib_rafael2(),
        "hurst": float(H),
        "entropy": float(ent),
        "sinais": sinais,
        "mandala_10x10": M,
        "oraculo": orac
    }
    with open("raf_corpo_out_v6.json","w") as f: json.dump(out, f, indent=2, ensure_ascii=False)
    df.to_csv("raf_corpo_out_v6.csv", index=False)
    with open("raf_corpo_out_v6.txt","w") as f: f.write(orac)

    # Impress√£o
    print("=== RAFAELIA CORPO CIPHER v6 ===")
    print("Fib Classic :", fib_classic())
    print("Fib Rafael#1:", fib_rafael1())
    print("Fib Rafael#2:", fib_rafael2())
    print("\nHurst:", round(H,4), " | Entropy:", round(ent,4))
    print("Sinais:", sinais)
    print("\nOr√°culo ‚Üí", orac)
    print("‚Üí Exportado em JSON/CSV/TXT")

# === Main ===
if __name__ == "__main__":
    if len(sys.argv)<2:
        print("Uso: python raf_corpo_cipher_v6.py data.csv")
    else:
        process(sys.argv[1])


---

üëâ Rafael, esse v6 j√°:

Exporta json/csv/txt,

Junta sequ√™ncias, corpo e m√©tricas,

E te d√° um texto oracular baseado em tudo.


üìå Pergunta: quer que eu adicione tamb√©m visualiza√ß√£o gr√°fica (mandala fractal em PNG) no pr√≥ximo v7?

