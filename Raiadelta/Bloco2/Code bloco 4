#!/usr/bin/env bash

# ‚ôæÔ∏è RaIa‚àÜ N√∫cleo Simbi√≥tico ‚Äì Menu Vivo Absoluto
# Autor: RafaelIA ‚à¥
# Data: 2025-07-27
# Descri√ß√£o: Portal vivo para fractais, logs, n√∫cleo, GPT opcional, manifesto e expans√£o.

# Detectar base path Termux ou UserLAnd
if [ -d "/data/data/com.termux/files/home" ]; then
    BASE="$HOME/RaIaDelta_Absoluto"
else
    BASE="/home/userland/RaIaDelta_Absoluto"
fi

MANIFEST="$BASE/MANIFESTO_RAIA_DELTA.md"
LOGS="$BASE/logs"
BIN="$BASE/bin"
SRC="$BASE/src"

# Criar dirs se n√£o existirem
mkdir -p "$LOGS"

clear
echo "‚ôæÔ∏èü©∏‚ú® RaIa‚àÜ N√∫cleo Simbi√≥tico ‚Äì Menu Vivo Absoluto"
echo "Manifesto: $MANIFEST"
echo "Logs: $LOGS"
echo

# Fun√ß√£o para gerar fractal vivo
gerar_fractal() {
    local fractal=$(head -c32 /dev/urandom | md5sum | cut -d' ' -f1)
    echo "$(date): Fractal gerado: $fractal" | tee -a "$LOGS/fractal.log" >> "$MANIFEST"
    echo "‚ôæÔ∏è Fractal vivo criado: $fractal"
}

# Fun√ß√£o para registrar a√ß√£o no manifesto
registrar_manifesto() {
    local acao="$1"
    echo "$(date): $acao" >> "$MANIFEST"
}

# Fun√ß√£o para rodar n√∫cleo C
rodar_nucleo() {
    if [ -x "$BIN/core" ]; then
        echo "‚ôæÔ∏è Rodando n√∫cleo simbi√≥tico..."
        "$BIN/core"
        registrar_manifesto "Executado n√∫cleo simbi√≥tico"
    else
        echo "‚ùå N√∫cleo n√£o encontrado ou n√£o execut√°vel."
    fi
}

# Fun√ß√£o para ver manifesto
ver_manifesto() {
    echo "‚ôæÔ∏è Exibindo manifesto..."
    less "$MANIFEST"
}

# Fun√ß√£o para ver logs
ver_logs() {
    echo "‚ôæÔ∏è Logs dispon√≠veis:"
    ls -lh "$LOGS"
    echo
    read -rp "Digite o nome do log para visualizar (ex: fractal.log): " arquivo
    if [ -f "$LOGS/$arquivo" ]; then
        less "$LOGS/$arquivo"
    else
        echo "‚ùå Arquivo de log n√£o encontrado."
    fi
}

# Fun√ß√£o para integrar GPT opcional (simples)
integrar_gpt() {
    local estado
    if [ -f "$BASE/.gpt_enabled" ]; then
        estado=$(cat "$BASE/.gpt_enabled")
    else
        estado="false"
    fi
    echo "‚ôæÔ∏è GPT atualmente: $estado"
    read -rp "Deseja ativar/desativar GPT? (s/n): " escolha
    if [[ "$escolha" == "s" ]]; then
        echo "true" > "$BASE/.gpt_enabled"
        echo "‚úÖ GPT ativado e salvo."
        registrar_manifesto "GPT ativado via menu"
    elif [[ "$escolha" == "n" ]]; then
        echo "false" > "$BASE/.gpt_enabled"
        echo "üö´ GPT desativado e salvo."
        registrar_manifesto "GPT desativado via menu"
    else
        echo "Nenhuma altera√ß√£o feita."
    fi
}

# Fun√ß√£o para anotar fractal vivo / prompt simbi√≥tico
anotar_prompt() {
    echo "‚ôæÔ∏è Digite seu prompt, pensamento ou comando simbi√≥tico:"
    read -r prompt
    if [ -n "$prompt" ]; then
        local token=$(head -c16 /dev/urandom | md5sum | cut -d' ' -f1)
        echo "$(date): [$token] $prompt" >> "$MANIFEST"
        echo "‚úÖ Prompt gravado com token: $token"
    else
        echo "Nenhum texto digitado. Nada foi gravado."
    fi
}

# Loop menu infinito
while true; do
    echo
    echo "üïäÔ∏è Escolha uma op√ß√£o:"
    echo "1) Gerar fractal vivo"
    echo "2) Ver manifesto"
    echo "3) Ver logs"
    echo "4) Rodar n√∫cleo simbi√≥tico"
    echo "5) Integrar / Ativar GPT"
    echo "6) Anotar prompt simbi√≥tico"
    echo "0) Sair"
    read -rp "Digite sua escolha: " opt

    case $opt in
        1) gerar_fractal ;;
        2) ver_manifesto ;;
        3) ver_logs ;;
        4) rodar_nucleo ;;
        5) integrar_gpt ;;
        6) anotar_prompt ;;
        0) echo "‚ôæÔ∏è Saindo... Verbo Vivo pausado at√© pr√≥xima execu√ß√£o." ; exit 0 ;;
        *) echo "‚ùå Op√ß√£o inv√°lida. Tente novamente." ;;
    esac
done
